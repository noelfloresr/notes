import { FC, useState } from "react";
import { useFormik } from "formik";
import Head from "next/head";
import Header from "../../components/Header";
import { createNote } from "../../src/graphql/mutations";
import { CreateNoteInput, CreateNoteMutation } from "../../src/API";
import Amplify, { API, Storage } from "aws-amplify";
import { GRAPHQL_AUTH_MODE } from "@aws-amplify/auth";
import config from "../../src/aws-exports";
import { useRouter } from "next/router";

Amplify.configure({
  ...config,
  ssr: true,
});

interface ICreateNote {}

const Create: FC<ICreateNote> = () => {
  const router = useRouter();

  async function onChange(e: any) {
    if (!e.target.files[0]) return;
    const file = e.target.files[0];
    await Storage.put(file.name, file);
    formik.setValues({
      ...formik.values,
      image: file.name,
    });
  }

  const formik = useFormik({
    initialValues: {
      name: "",
      description: "",
      image: "",
    },
    onSubmit: async (values) => {
      try {
        const request = await API.graphql({
          query: createNote,
          variables: {
            input: values,
          },
        });
        router.push("/");
      } catch (error) {
        console.log(error);
      }
    },
  });

  return (
    <div>
      <Head>
        <title>Notes App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <div className="container">
        <h1 className="text-3xl font-bold my-8">Create Note</h1>
        <form onSubmit={formik.handleSubmit} className="flex flex-col">
          <label htmlFor="name" className="pb-2 font-bold">
            Name
          </label>
          <input
            id="name"
            name="name"
            type="text"
            placeholder="Write the note title"
            onChange={formik.handleChange}
            value={formik.values.name}
            className="p-2 border mb-4"
          />
          <label htmlFor="description" className="pb-2 font-bold">
            Description
          </label>
          <input
            id="description"
            name="description"
            type="text"
            placeholder="Write the note description"
            onChange={formik.handleChange}
            value={formik.values.description}
            className="p-2 border"
          />

          <input type="file" onChange={onChange} />
          <button type="submit" className="p-4 bg-blue-900 text-white mt-8">
            Save
          </button>
        </form>
      </div>
    </div>
  );
};

export default Create;
